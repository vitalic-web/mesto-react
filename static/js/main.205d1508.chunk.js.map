{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js","images/header__logo.svg"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","link","onClick","name","type","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","avatar","about","aria-label","map","item","key","Footer","PopupWithForm","title","children","isOpen","onClose","onSubmit","ImagePopup","visibility","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","required","pattern","minLength","maxLength","id","placeholder","value","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onAddPlaceSubmit","nameRef","linkRef","api","options","this","_url","url","_method","method","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_handleResponse","body","JSON","stringify","place","cardID","inputValue","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getProfileInfo","getInitialCards","profileInfo","cardsInfo","catch","err","console","error","handleOverlayClose","evt","classList","contains","handleEscClose","document","addEventListener","removeEventListener","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","setProfileInfo","avatarLink","editAvatar","addCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.205d1508.chunk.js","sourcesContent":["import React from 'react';\r\nimport headerLogo from '../images/header__logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={headerLogo} alt=\"лого\"/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React, {useContext} from 'react';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\n/**\r\n * Компонент создания карточки\r\n * @param card - объект с данными карточки\r\n * @param onCardClick - параметр для передачи данных карточки в компонент ImagePopup\r\n * @param onCardLike - функция постановки лайка\r\n * @param onCardDelete - функция удаления карточки\r\n * @returns {JSX.Element} - возвращает разметку карточки\r\n * @constructor\r\n */\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id; // проверка карточки: если моя, то возвращает true, если нет false\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // проверка лайка: если мой, то возвращает true, если нет false  \r\n\r\n  // функция для передачи параметров текущей карточки для открытия картинки в полный размер\r\n  function handleClick() {\r\n    onCardClick(card.name, card.link, true);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      <img className=\"element__image\"\r\n           src={card.link}\r\n           alt=\"\"\r\n           onClick={handleClick}\r\n      />\r\n      {/*element__delete_hidden добавляется если карточка не моя*/}\r\n      <button onClick={handleDeleteClick} className={`element__delete ${!isOwn && 'element__delete_hidden'}`} type=\"button\"/>\r\n      <div className=\"element__title\">\r\n        <h2 className=\"element__title-text\">{card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button onClick={handleLikeClick} className={`element__title-like ${isLiked && 'element__title-like_active'}`} type=\"button\"/>\r\n          <div className=\"element__like-amount\">{card.likes.length}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, {useContext} from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\n/**\r\n * Компонент раздела main\r\n * @param cards - массив с карточками\r\n * @param onCardLike - функция лайка карточки\r\n * @param onCardDelete - функция удаления карточки\r\n * @param onEditProfile - попап редактирования профиля\r\n * @param onAddPlace - попап добавления места\r\n * @param onEditAvatar - попап редактирования аватара\r\n * @param onCardClick - передача параметра в компонент Card\r\n * @returns {JSX.Element} - возврат разметки содержимого раздела main\r\n * @constructor\r\n */\r\n\r\nfunction Main({cards, onCardLike, onCardDelete, onEditProfile, onAddPlace, onEditAvatar, onCardClick}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__info\">\r\n          <img className=\"profile__avatar\"\r\n               src={currentUser && currentUser.avatar}\r\n               alt=\"\"\r\n          />\r\n          <div className=\"profile__avatar-editor\" onClick={onEditAvatar}></div>\r\n          <div className=\"profile__author\">\r\n            <div className=\"profile__title\">\r\n              <h1 className=\"profile__title-name\">{currentUser && currentUser.name}</h1>\r\n              <button className=\"profile__title-button\" type=\"button\" onClick={onEditProfile}/>\r\n            </div>\r\n            <p className=\"profile__subtitle\">{currentUser && currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}/>\r\n      </section>\r\n\r\n      <section className=\"elements\" aria-label=\"Элементы\">\r\n        {cards.map(item =>\r\n          <Card key={item._id} card={item} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete}/>\r\n        )}\r\n      </section>\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">&copy; 2020 Mesto Russia</footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n/**\r\n * Компонент создания окна попап\r\n * @param title - название окна попап\r\n * @param name - уникальная часть имени класса определенного типа попапа\r\n * @param children - уникальная разметка для каждого класса\r\n * @param isOpen - параметр для открытия попапа, меняется при клике на true\r\n * @param onClose - закрытие попапа по клику на крестик\r\n * @param onSubmit - функция обработки сабмита\r\n * @returns {JSX.Element} - возвращает разметку попапа\r\n * @constructor\r\n */\r\n\r\nfunction PopupWithForm({title, name, children, isOpen, onClose, onSubmit}) {\r\n\r\n  return (\r\n    <section className={`popup popup_${name} ${isOpen ? 'popup_active' : ''}`}>\r\n\r\n      <form className=\"popup__container\" onSubmit={onSubmit}>\r\n        <h3 className=\"popup__title\">{title}</h3>\r\n\r\n        {children}\r\n\r\n        <button className=\"popup__close-icon\" type=\"button\" onClick={onClose}/>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\n/**\r\n * Компонент открытия картинки в полную величину\r\n * @param card - параметры текущей карточки {name: '...', link: '...', visibility: true/false}\r\n * @param onClose - закрытие через крестик\r\n * @returns {JSX.Element} - возврат картинки в полную величину\r\n * @constructor\r\n */\r\n\r\nfunction ImagePopup({card, onClose}) {\r\n\r\n  return (\r\n    <div className={`popup popup_open_photo ${card.visibility ? 'popup_active' : ''}`}>\r\n      <div className=\"popup-photo\">\r\n        <img className=\"popup-photo__image\"\r\n             src={card.link} alt=\"\"/>\r\n        <h2 className=\"popup-photo__text\">{card.name}</h2>\r\n        <button className=\"popup__close-icon\" type=\"button\" onClick={onClose}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n/**\r\n * Компонент попапа редактирования данных профиля\r\n * @param isOpen - стейт на открытие попапа\r\n * @param onClose - функция закрытия попапа\r\n * @param onUpdateUser - функция обработки сабмита\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  function nameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function descriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateUser(name, description);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n    }\r\n  }, [currentUser])\r\n\r\n  return (\r\n    <PopupWithForm title=\"Редактировать профиль\"\r\n                   name=\"edit_profile\"\r\n                   isOpen={isOpen}\r\n                   onClose={onClose}\r\n                   onSubmit={handleSubmit}\r\n    >\r\n      <input name=\"name\" className=\"popup__input popup__input_filed_name\" type=\"text\" required\r\n             pattern=\"[А-ЯЁа-яёA-Za-z -]{1,}\" minLength=\"2\" maxLength=\"40\" id=\"name-input\" placeholder={\"Имя\"}\r\n             value={name} onChange={nameChange}/>\r\n      <span className=\"popup__input-error-message\" id=\"name-input-error\"/>\r\n\r\n      <input name=\"about\" className=\"popup__input popup__input_filed_prof\" type=\"text\" required\r\n             minLength=\"2\" maxLength=\"200\" id=\"prof-input\" placeholder={\"Занятие\"}\r\n             value={description} onChange={descriptionChange}/>\r\n      <span className=\"popup__input-error-message\" id=\"prof-input-error\"/>\r\n\r\n      <button className=\"popup__save-button\" type=\"submit\">Сохранить</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React, {useRef} from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n/**\r\n * Компонент попапа редактирования аватара\r\n * @param isOpen - стейт на открытие попапа\r\n * @param onClose - функция закрытия попапа\r\n * @param onUpdateAvatar - функция обработки сабмита\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\r\n  const avatarRef = useRef('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateAvatar(avatarRef.current.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Обновить аватар\"\r\n                   name=\"edit_avatar\"\r\n                   isOpen={isOpen}\r\n                   onClose={onClose}\r\n                   onSubmit={handleSubmit}\r\n    >\r\n      <input name=\"avatar\" className=\"popup__input popup__input_filed_avatar-link\" type=\"url\"\r\n             placeholder=\"Ссылка на аватар\" required id=\"avatar-input\" ref={avatarRef}/>\r\n      <span className=\"popup__input-error-message\" id=\"avatar-input-error\"/>\r\n      <button className=\"popup__save-button\" type=\"submit\">Сохранить</button>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React, {useRef} from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n/**\r\n * Компонент попапа добавления карточки\r\n * @param isOpen - стейт на открытие попапа\r\n * @param onClose - функция закрытия попапа\r\n * @param onAddPlaceSubmit - функция обработки сабмита\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlaceSubmit}) {\r\n  const nameRef = useRef('');\r\n  const linkRef = useRef('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onAddPlaceSubmit(nameRef.current.value, linkRef.current.value);\r\n\r\n    // очистка инпутов после загрузки карточки\r\n    nameRef.current.value = '';\r\n    linkRef.current.value = '';\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Новое место\"\r\n                   name=\"add_photo\"\r\n                   isOpen={isOpen}\r\n                   onClose={onClose}\r\n                   onSubmit={handleSubmit}\r\n    >\r\n      <input name=\"place\" className=\"popup__input popup__input_filed_name\" type=\"text\" placeholder=\"Название\"\r\n             required minLength=\"1\" maxLength=\"30\" id=\"place-input\" ref={nameRef}/>\r\n      <span className=\"popup__input-error-message\" id=\"place-input-error\"/>\r\n\r\n      <input name=\"link\" className=\"popup__input popup__input_filed_prof\" type=\"url\"\r\n             placeholder=\"Ссылка на картинку\" required id=\"link-input\" ref={linkRef}/>\r\n      <span className=\"popup__input-error-message\" id=\"link-input-error\"/>\r\n      <button className=\"popup__save-button\" type=\"submit\">Создать</button>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","/**\r\n * Класс для запросов к api, в нем создается один экземляр и экспортируется для дальнейшей работы\r\n */\r\n\r\nexport class Api {\r\n  constructor(options){\r\n    this._url = options.url;\r\n    this._method = options.method;\r\n    this._headers = options.headers;\r\n  };\r\n\r\n  _handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  };\r\n\r\n  getProfileInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: this._method,\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: this._method,\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  setProfileInfo(name, about) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about\r\n      })\r\n    })\r\n    .then(this._handleResponse)\r\n  };\r\n\r\n  addCard(place, link) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: place,\r\n        link: link\r\n      })\r\n    })\r\n    .then(this._handleResponse)\r\n  };\r\n\r\n  deleteCard(card) {\r\n    return fetch(`${this._url}/cards/${card._id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n    .then(this._handleResponse)\r\n  };\r\n\r\n  changeLikeCardStatus(cardID, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._url}/cards/likes/${cardID}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers\r\n      })\r\n        .then(this._handleResponse)\r\n    } else {\r\n      return fetch(`${this._url}/cards/likes/${cardID}`, {\r\n        method: 'PUT',\r\n        headers: this._headers\r\n      })\r\n        .then(this._handleResponse)\r\n    }\r\n  }\r\n\r\n  editAvatar(inputValue) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: inputValue\r\n      })\r\n    })\r\n    .then(this._handleResponse)\r\n  };\r\n}\r\n\r\nexport const api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n  method: 'GET',\r\n  headers: {\r\n    authorization: '91300657-0053-4635-a6b2-461fc085116c',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport {api} from '../utils/api.js';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\n/**\r\n * Основной компонент, установлены слушатели на закрытие крестиком/escape/overlay\r\n * @returns {JSX.Element} - возврат разметки всей старницы\r\n * @constructor\r\n */\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({name: '', link: '', visibility: false});\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getProfileInfo(), api.getInitialCards()])\r\n      .then(([profileInfo, cardsInfo]) => {\r\n        setCurrentUser(profileInfo);\r\n        setCards(cardsInfo);\r\n    })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    api.changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card)\r\n      .then(() => {\r\n        const newCards = cards.filter(item => item._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n  }\r\n\r\n  function handleCardClick(name, link, visibility) {\r\n    setSelectedCard({name, link, visibility});\r\n  }\r\n\r\n  // закрытие всех попапов\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard((selectedCard) => {\r\n      return {...selectedCard, visibility: false}; // возврат значения адреса/имени картинки для плавного закрытия\r\n    });\r\n  }\r\n\r\n  // обновление данных имени и рода занятий через попап редактирования профиля\r\n  function handleUpdateUser(name, description) {\r\n    api.setProfileInfo(name, description)\r\n      .then(res => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  // обновление аватара через попап редактирования аватара\r\n  function handleUpdateAvatar(avatarLink) {\r\n    api.editAvatar(avatarLink)\r\n      .then(res => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n  }\r\n\r\n  function handleAddPlaceSubmit(place, link) {\r\n    api.addCard(place, link)\r\n      .then(res => {\r\n        setCards([res, ...cards]);\r\n        closeAllPopups();\r\n        place = ''\r\n        link = '';\r\n      })\r\n  }\r\n\r\n  // закрытие попапов через escape и overlay\r\n  useEffect(() => {\r\n    function handleOverlayClose(evt) {\r\n      if (evt.target.classList.contains('popup_active')) {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n\r\n    function handleEscClose(evt) {\r\n      if (evt.key === \"Escape\") {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleOverlayClose);\r\n    document.addEventListener('keydown', handleEscClose);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleOverlayClose);\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n\r\n        <Header/>\r\n\r\n        <Main cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardClick={handleCardClick}\r\n        />\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlaceSubmit={handleAddPlaceSubmit}/>\r\n\r\n        <PopupWithForm title=\"Вы уверены?\"\r\n                       name=\"is_delete\"\r\n        >\r\n          <button className=\"popup__save-button popup__save-button_delete\" type=\"submit\">Да</button>\r\n        </PopupWithForm>\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n        <Footer/>\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/header__logo.855a8c98.svg\";"],"sourceRoot":""}